@model ChinUpBoutique.Models.StylistDetail
@using Microsoft.AspNet.Identity


@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <div class="container">
        <h3>Stylist Detail</h3>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.HiddenFor(model => model.StylistID)
            </dt>
            <dd>
                <img class="individualimg" src="data:image/jpg;base64,@Convert.ToBase64String(Model.StylistProfile.Photo)" />
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.StylistUserName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.StylistUserName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.StylistProfile.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.StylistProfile.FirstName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.StylistProfile.LastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.StylistProfile.LastName)
            </dd>
        </dl>
    </div>
</div>


<hr />



@using (Html.BeginForm("Create", "UserReview", new { id = Model.StylistID }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Create User Review</h3>
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.StylistID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StylistID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StylistID, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @*@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Title</label>
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })*@
                <input name="title" type="text" />
                @*@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Content</label>
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })*@
                <input name="content" type="text" />
                @*@Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@foreach (var item in Model.UserReviewListItem)
{

<table>
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Content)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedUtc)
        </td>
        <td>
            @if (User.IsInRole("Admin"))
            {
                using (Html.BeginForm("Delete", "UserReview", new { id = item.ReviewID }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-actions no-color">
                        <input type="submit" value="Delete" class="btn btn-default" />
                    </div>
                }
            }

            @if (item.OwnerID == Guid.Parse(User.Identity.GetUserId()))
            {
                @Html.ActionLink("Edit Review", "Edit", "UserReview", new { id = item.ReviewID },new { htmlAttributes = new { @class = "btn" } })
            }
        </td>
    </tr>
</table>
}

<p>
    @if (Model.StylistID == User.Identity.GetUserId())
    {
        @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) <span>|</span>
    }
    @Html.ActionLink("Back to List", "Index")<span>|</span>

    
</p>

<style>
body {
    font-family: 'Dancing Script', 'bold';
    font-size: x-large;
}

.container {
    margin: 0 auto;
}
.individualimg {
    border-color: black;
    border: 2px solid black;
    align-items: center;
    margin: 0 auto;
}

.form-horizontal {
    align-content: center;
}

h2 {
     text-align: center;
    font-weight: bold;
    font-size: 40px;
    

}

h3 {
   font-weight: bold;
   text-align: center;
}



table td {
    border: 1px solid black;
    background: white;
    margin: 0 auto;
}

</style>